# Docker Compose for Jenkins with Python support
# For sample_gaming_sut project automation

version: '3.8'

services:
  jenkins:
    build:
      context: .
      dockerfile: Dockerfile.jenkins
    container_name: jenkins-gaming-sut
    restart: unless-stopped
    ports:
      - "8080:8080"    # Jenkins web UI
      - "50000:50000"  # Jenkins agent port
      - "8767:8767"    # Game server port (for testing) (for testing)
    volumes:
      # Jenkins data persistence
      - jenkins_home:/var/jenkins_home
      # Docker socket (if you need Docker-in-Docker)
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Host workspace (optional, for shared development)
      # - ./workspace:/var/jenkins_home/workspace
    environment:
      - JENKINS_OPTS=--httpPort=8080
      - JAVA_OPTS=-Xmx2g -Dhudson.footerURL=http://sample-gaming-sut
      # Timezone
      - TZ=UTC
    networks:
      - jenkins-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/login || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Game server for testing (can be started/stopped by Jenkins)
  game-server:
    image: python:3.11-slim
    container_name: game-server-sut
    restart: "no"  # Controlled by Jenkins
    ports:
      - "8767:8767"
    volumes:
      - ./workspace:/app
    working_dir: /app
    command: ["tail", "-f", "/dev/null"]  # Keep container running
    networks:
      - jenkins-network
    profiles:
      - testing  # Only start with --profile testing

volumes:
  jenkins_home:
    name: jenkins-gaming-sut-home

networks:
  jenkins-network:
    name: jenkins-gaming-sut-network
    driver: bridge